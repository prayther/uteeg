#!/bin/sh

# File generated by puppet. 
# Edit it from the puppetmaster only or changes will be overwritten.


<%
# dologging: default is false
#   true will log this cron job output to a file 
#   false will send output to stdout (and emailed if set up in crontab)
dologging = false

# makesticky: default is true
#   true will set the sticky bit on world writable directories
#   false will not set the sticky bit
makesticky = true

# unwwfiles: default is true
#   true will remove the world-writable attribute from world writable files
#   false will leave files as they are and only log output
unwwfiles = true

# unsuidfiles: default is false
#   true will remove suid or guid from any non-whitelisted file in KNOWNSUID
#   false will leave the file as it is and only log output
unsuidfiles = false 

# rootownfiles: default is false 
#   true will set root as the owner for any unowned files
#   false will leave the files unowned
#     false should probably be used if ldap is used and might be down
rootownfiles = false 

# sysownwwdirs: default is true
#   true sets root as the owner on any non-system-owned world-writable directories
#   false leaves the file as it is and logs output
sysownwwdirs = true
%>

LOGPATH=/var/log/puppet/
LOGFILE=/var/log/puppet/permissions.log

# Individual partitions can be specified to be searched
# LOCALPARTITIONS=(/home /etc /var /tmp ...)
LOCALPARTITIONS=(/)

# Can append to this list for executable that need SUID or GUID permissions
KNOWNSUID=(/bin/mount /bin/ping /bin/ping6 /bin/su /bin/umount /sbin/mount.nfs /sbin/mount.nfs4 /sbin/netreport /sbin/pam_timestamp_check /sbin/umount.nfs /sbin/umount.nfs4 /sbin/unix_chkpwd /usr/bin/at /usr/bin/chage /usr/bin/chfn /usr/bin/chsh /usr/bin/crontab /usr/bin/gpasswd /usr/bin/locate /usr/bin/lockfile /usr/bin/newgrp /usr/bin/passwd /usr/bin/rcp /usr/bin/rlogin /usr/bin/rsh /usr/bin/ssh-agent /usr/bin/sudo /usr/bin/sudoedit /usr/bin/wall /usr/bin/write /usr/bin/Xorg/usr/kerberos/bin/ksu /usr/libexec/openssh/ssh-keysign /usr/libexec/utempter/utempter /usr/lib/squid/pam_auth /usr/lib/squid/ncsa_auth /usr/lib/vte/gnome-pty-helper /usr/sbin/ccreds_validate /usr/sbin/lockdev /usr/sbin/sendmail.sendmail /usr/sbin/suexec /usr/sbin/userhelper /usr/sbin/userisdnctl /usr/sbin/usernetctl)


mkdir -p ${LOGPATH}
touch ${LOGFILE}


# Verify that all world-writable directories have sticky bits set
for part in ${LOCALPARTITIONS[@]}
do
	for file in `find $part -xdev -type d \( -perm -0002 -a ! -perm -1000 \) -print`
	do
		echo "`date '+%F %R:'` Sticky bit set on ${file}" <% if dologging then %><%= ">> ${LOGFILE}" %><% end %>
		<% if makesticky %><%= "chmod +t ${file}"%><% end %>
	done
done


# Find unauthorized world-writable files
for part in ${LOCALPARTITONS[@]}
do
	for file in `find ${part} -xdev -type f -perm -0002 -print`
	do
		echo "`date '+%F %R:'` World writable file found: ${file}" <% if dologging then %><%= ">> ${LOGFILE}" %><% end %>
		<% if unwwfiles %><%= "chmod o-w ${file}"%><% end %>
	done
done


# Find unauthorized suid/guid files
for part in ${LOCALPARTITIONS[@]}
do
	for file in `find ${part} -xdev \( -perm -4000 -o -perm -2000 \) -type f -print`
	do
		isok=0
		for i in ${KNOWNSUID[@]}
		do
			if [ ${file} == ${i} ]
			then
				isok=1
			fi
		done

		if [ $isok == 0 ]
		then
			echo "`date '+%F %R:'` SUID/GUID file found, please fix manually: ${file}" <% if dologging then %><%= ">> ${LOGFILE}" %><% end %> 
			<% if unsuidfiles %><%= "chmod -s ${file}" %><% end %>
		fi
	done
done


# Repair unowned files
for part in ${LOCALPARTITIONS[@]}
do
	for file in `find ${part} -xdev \( -nouser -o -nogroup \) -print`
	do
		echo "`date '+%F %R:'` Unowned file: ${file}" <% if dologging then %><%= ">> ${LOGFILE}" %><% end %>
		<% if rootownfiles %><%= "chown root:root ${file}" %><% end %>
	done
done


# Verify that world-writable directories have system account ownership
for part in ${LOCALPARTITIONS[@]}
do
	for file in `find ${part} -xdev -type d -perm -0002 -uid +500 -print`
	do
		echo "`date '+%F %R:'` World-writable directory not owned by root/system: ${file}" <% if dologging then %><%= ">> ${LOGFILE}" %><% end %>
		<% if sysownwwdirs %><%= "chown root:root ${file}" %><% end %>
	done
done
# just make it so...
chmod -R 0644 /usr/share/man
chmod -R 0640 /etc/security/access.conf
find /var/log/* -type f -exec chmod 640 {} \;
chmod -R 0640 /etc/syslog.conf
chmod -R 0600 /var/log/cron*
chmod -R 0700 /root
chmod -R 0700 /usr/share/logwatch/scripts/logwatch.pl
for i in `find / \( -path /proc -o -path /dev -o -path /sys \) -prune -fstype nfs -prune -o -nouser`;do chown root.root $i;done
find $(awk -F: '{ print $6 }' /etc/passwd|sort|uniq|grep -v '^/$') -maxdepth 1 -type f \( -name .login -o -name .cshrc -o -name .logout -o -name .profile -o -name .bashrc -o -name .bash_logout -o -name .bash_profile -o -name .bash_login -o -name .env -o -name .dispatch -o -name .emacs -o -name .exrc \) -perm /7037 -exec chmod u-s,g-wxs,o-rwxt {} \;
find $(awk -F: '{ print $6 }' /etc/passwd|sort|uniq|grep -v '^/$') -maxdepth 1 \( -name .dt -o -name .dtprofile \) -perm /7022 -exec chmod u-s,g-ws,o-wt {} \;
find /var/spool/cron /etc/cron.d /etc/crontab -type f -perm /7177 -exec chmod u-xs,g-rwxs,o-rwxt {} \;
find /etc/cron.daily /etc/cron.hourly /etc/cron.monthly /etc/cron.weekly -type f -perm /7077 -exec chmod u-s,g-rwxs,o-rwxt {} \;
find /var/spool/cron /etc/cron.d /etc/crontab -type f -perm /7177 -exec chmod u-xs,g-rwxs,o-rwxt {} \;
find /etc/cron.daily /etc/cron.hourly /etc/cron.monthly /etc/cron.weekly -type f -perm /7077 -exec chmod u-s,g-rwxs,o-rwxt {} \;
